swagger: '2.0'
x-stoplight:
  id: e27a9bc2d3269
info:
  description: |-
    이 프로젝트는 비공식 드림핵 API를 정리하여 문서화하는 커뮤니티 프로젝트입니다. 이 저장소는 원작자의 요청에 따라 언제든 지워질 수 있으며, 현재 API와 일치하지 않을 수도 있는 점 양해 부탁드립니다.

    <a href="https://github.com/sihyeokpark/Unofficial-Dreamhack-API">Github에서 보기</a>
  version: 1.0.0
  title: Unofficial DreamHack API
  contact: {}
  license:
    name: MIT
host: dreamhack.io
basePath: /api/v1
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - https
paths:
  /services/suggestion:
    get:
      summary: 검색하기
      tags: []
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties: {}
          examples:
            'https://dreamhack.io/api/v1/services/suggestion/?keyword=%EC%97%91%EC%8A%A8':
              users:
                count: 1
                text: 유저
                objects:
                  - id: 6855
                    nickname: 엑슨
                    level: 10
                    profile_image: 'https://kr.object.ncloudstorage.com/dreamhack-content/user/3be75c5b3b18cf80aa3b65239f00fbbc9f1d702a8be9cd269e6bc86e8c36ddd2.png'
              challenges:
                count: 0
                text: 워게임 문제
                objects: []
              courses:
                count: 0
                text: 강의
                objects: []
              forum:
                count: 0
                text: 포럼
                objects: []
      operationId: get-services-suggestion
      parameters:
        - type: string
          in: query
          name: keyword
          description: 검색할 키워드
      description: 'kerword 값으로 모든 유저, 포럼, 워게임, 강의를 검색합니다.'
    parameters: []
securityDefinitions: {}
definitions:
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          wrapped: true
        items:
          type: string
          xml:
            name: photoUrl
      tags:
        type: array
        xml:
          wrapped: true
        items:
          xml:
            name: tag
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
    xml:
      name: Order
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
produces: []
x-internal: false
